name: Automação de Backup S3

on:
  push:
    branches:
      - main  # Executa sempre que um push for feito na branch main

jobs:
  backup:
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: test
      AWS_SECRET_ACCESS_KEY: test
      AWS_DEFAULT_REGION: us-east-1

    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Instalar dependências
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir -r requirements.txt

      - name: Configurar LocalStack
        run: |
          docker run -d --name localstack -p 4566:4566 localstack/localstack
          echo "Aguardando LocalStack iniciar..."
          sleep 10

      - name: Verificar LocalStack com retries (Corrigido)
        run: |
          for i in {1..6}; do
            RESPONSE=$(curl -s -H "Accept: application/json" http://localhost:4566/health || echo "{}")
            echo "Resposta do LocalStack: $RESPONSE"

            # Verifica se a resposta contém JSON antes de usar jq
            if echo "$RESPONSE" | grep -q '{'; then
              STATUS=$(echo "$RESPONSE" | jq -r '.services.s3 // "offline"')
              if [ "$STATUS" = "running" ]; then
                echo "LocalStack está pronto!"
                exit 0
              fi
            fi
            
            echo "Tentativa $i: LocalStack ainda não está pronto. Aguardando..."
            sleep 10
          done
          echo "Erro: LocalStack não iniciou corretamente"
          exit 1

      - name: Criar diretório de backup se não existir
        run: mkdir -p ./backup

      - name: Criar bucket S3 no LocalStack
        run: aws --endpoint-url=http://localhost:4566 s3 mb s3://meu-bucket || echo "Erro ao criar bucket"

      - name: Verificar buckets existentes
        run: aws --endpoint-url=http://localhost:4566 s3 ls || echo "Erro ao listar buckets"

      - name: Garantir permissão do script
        run: chmod +x backup_monitor.py

      - name: Executar Script de Backup
        run: python backup_monitor.py
